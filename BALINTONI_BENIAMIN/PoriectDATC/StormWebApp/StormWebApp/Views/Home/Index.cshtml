@model IEnumerable<StormWebApp.Models.Date>
@{
    ViewBag.Title = "Home Page";
    Layout = null;
}

<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="~/Content/CssFiles/IndexCSS.css" />

    <script type="text/javascript">
        var dataheat = [];
        var dataheat1 = [];
        var dataheat2 = [];


        function initMap() {

            document.getElementById('map').innerText = "";
        //    $('#map').load(window.location.href + ' #map');

            var jItem = @Html.Raw(Json.Encode(Model));
            var parcBotanic = new google.maps.LatLng(45.76046, 21.225);

            var options = {
                zoom: 18,
                center: parcBotanic
            }
            // New map
            var map = new google.maps.Map(document.getElementById('map'), options);


            for (var i = 0; i < jItem.length; i++) {
                addMarker(jItem[i]);
                var point = new google.maps.LatLng(
                    parseFloat(jItem[i].Latitude),
                    parseFloat(jItem[i].Longitude)
                );

                if (parseFloat(jItem[i].Humidity) < 18)
                {
                    dataheat.push(point)
                }
                if (parseFloat(jItem[i].Humidity) > 20)
                {
                    dataheat1.push(point)
                }
            }
            // Add Marker Function
            function addMarker(props) {
                var dt = Number(props.Data.substring(6,props.Data.length-2))
                var newContent = document.createElement('div');
                var div = document.createElement('div');
                div.innerText = "Data: " + new Date(dt) +"\nTemperature: " + props.Temperature.toString() + " Humidity: " + props.Humidity.toString() + " \nNeed Irigation: " + props.NeedIrigation.toString();
                newContent.appendChild(div);

                 var marker = new google.maps.Marker({
                    position: { lat: parseFloat(props.Latitude), lng: parseFloat(props.Longitude) },
                    map: map,
                 
                });

                var infoWindow = new google.maps.InfoWindow({
                    content: newContent
                });
                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });
            }
           
            var yellow = [
                'rgba(255, 255, 0, 0)',
                'rgba(255, 255, 0, 1)'
            ];

            var red = [
                'rgba(255, 0, 0, 0)',
                'rgba(255, 0, 0, 1)'
            ];

            var green = [
                'rgba(0, 255, 0, 0)',
                'rgba(0, 255, 0, 1)'
            ];

            var redHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat,
                map: map,
                radius: 24

            });
            var yellowHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat1,
                map: map,
                radius: 24

            });
            var greenHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat2,
                map: map,
                radius: 24

            });

            redHeatmap.set('gradient', redHeatmap.get('gradient') ? null : red);
            yellowHeatmap.set('gradient', yellowHeatmap.get('gradient') ? null : yellow);
            greenHeatmap.set('gradient', greenHeatmap.get('gradient') ? null : green);
            // AICIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
        }


        function initMap1() {
            var jItem = @Html.Raw(Json.Encode(Model));
            var parcBotanic = new google.maps.LatLng(45.76046, 21.225);

            var options = {
                zoom: 18,
                center: parcBotanic
            }

            // New map
            var map = new google.maps.Map(document.getElementById('map'), options);


            for (var i = 0; i < jItem.length; i++) {
                addMarker(jItem[i]);
                var point = new google.maps.LatLng(
                    parseFloat(jItem[i].Latitude),
                    parseFloat(jItem[i].Longitude)
                );
                dataheat2.push(point)
                //if (parseFloat(jItem[i].Temperature) < 18)
                //{
                //    dataheat.push(point)
                //}
                //if (parseFloat(jItem[i].Temperature) > 20)
                //{
                //    dataheat1.push(point)
                //}
            }
            // Add Marker Function
            function addMarker(props) {
                var dt = Number(props.Data.substring(6,props.Data.length-2))
                var newContent = document.createElement('div');
                var div = document.createElement('div');
                div.innerText = "Data: " + new Date(dt) +"\nTemperature: " + props.Temperature.toString() + " Humidity: " + props.Humidity.toString() + " \nNeed Irigation: " + props.NeedIrigation.toString();
                newContent.appendChild(div);

                 var marker = new google.maps.Marker({
                    position: { lat: parseFloat(props.Latitude), lng: parseFloat(props.Longitude) },
                    map: map,
                  //  icon: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png'
                });

                var infoWindow = new google.maps.InfoWindow({
                    content: newContent
                });
                marker.addListener('click', function () {
                    infoWindow.open(map, marker);
                });
            }
           
            var yellow = [
                'rgba(255, 255, 0, 0)',
                'rgba(255, 255, 0, 1)'
            ];

            var red = [
                'rgba(255, 0, 0, 0)',
                'rgba(255, 0, 0, 1)'
            ];

            var green = [
                'rgba(0, 255, 0, 0)',
                'rgba(0, 255, 0, 1)'
            ];

            var redHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat,
                map: map,
                radius: 24

            });
            var yellowHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat1,
                map: map,
                radius: 24

            });
            var greenHeatmap = new google.maps.visualization.HeatmapLayer({

                data: dataheat2,
                map: map,
                radius: 24

            });

            redHeatmap.set('gradient', redHeatmap.get('gradient') ? null : red);
            yellowHeatmap.set('gradient', yellowHeatmap.get('gradient') ? null : yellow);
            greenHeatmap.set('gradient', greenHeatmap.get('gradient') ? null : green);
            
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCeBrzsotmd8hGyxSeaFXiiOM_kfL2nnm4&libraries=visualization"></script>


</head>

<body>
    <div>
        <h1 style="align-content:center">Vizualizare hartă</h1> <br/>
            <input type="button" value="Temperatura" id="Temp" name="Temp" onclick="initMap()"/><br/>
            <input type="button" value="Umiditate  " id="Umid" name="Umid" onclick="initMap1()"/><br/>
    </div>
    <div id="map"></div>

</body>
</html>