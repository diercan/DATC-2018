<!doctype html>
<html ng-app>
<head>
<meta charset="utf-8">
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<tilte style="text-shadow: black; font-size: large; color:white; border-left: 10px;">Sistem de irigatie</title><br>

<base href="/">
<script type="text/javascript" src="/socket.io/socket.io.js"></script> 
<!--The above library(/socket.io/socket.io.js) will be generated by socket.io module of server -->
<script type="text/javascript" src="http://code.jquery.com/jquery-1.10.2.min.js"></script>

<link  href="/clientPage.css" rel="stylesheet" type="text/css" >
<link rel="stylesheet" src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<!-- Latest compiled JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>



</head>
<body background="/bg.jpg" >

<div class="panel panel-default" style="width: auto; height: auto; background: #003300">
  <div class="panel-body">  
    <form class="navbar-form navbar-left" role="search">
  <div class="form-group">
    <div class="dropdown">
  
    <select id="mySelect" onclick="setMapToAScpecificPlace()">
    <option> Toata harta</option>
    <option> Stadionul Dan Paltinisanu</option>
    <option> Gradina Zoologica</option>
    <option> Parcul Botanic</option>
    <option> Parcul Copiilor</option>
    </select>

  
    <button  style="background- color: #ccccff; color: black; ">Valori Senzori</button>
    <button onclick="displayValues()" style="background- color: #ccccff; color: black;">Istoric</button>
    </div> 
    </div>
  </form>
</div> 
    </div>

<br>
<div class="panel panel-default" style="width: auto; height: auto; background: #003300">
  <div class="panel-body">  
 <div style="display: inline; color: white"><label><h2>Pompa
  <div class="onoffswitch" style="float: right; margin-right: 1000px">
    <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch" onclick="startStopPompa()" checked>
    <label class="onoffswitch-label" for="myonoffswitch">
        <span class="onoffswitch-inner"></span>
        <span class="onoffswitch-switch"></span>
    </label>
</div>

</h2></label></div>
</div>
</div>

<br>
<div id="map" style="height: 400px; width: 100%;  "></div>
<br>
<div style="display: none" id="tableOfValues">
  <table class="table">
  <thead>
    <tr>
      <th scope="col">Data</th>
      <th scope="col">Zona</th>
      <th scope="col">Temperatura</th>
      <th scope="col">Umiditate</th>
      <th scope="col">Pornire sistem irigatii</th>
    </tr>
  </thead>
  <tbody>

  </tbody>
</table>
  </div>

<!-- Rounded switch -->

  <div id="map"></div>

 <script>

  var socket = io.connect("/");          /*Initializing the connection with the server via websockets */

            socket.on("message",function(message){  
                
                console.log("Message from the server arrived")
                message = JSON.parse(message);
                console.log(message); /*converting the data into JS object */


            });
      

  function detectBrowser() {
  var useragent = navigator.userAgent;
  var mapdiv = document.getElementById("map");

  if (useragent.indexOf('iPhone') != -1 || useragent.indexOf('Android') != -1 ) {
    mapdiv.style.width = '100%';
    mapdiv.style.height = '100%';
  } else {
    mapdiv.style.width = '600px';
    mapdiv.style.height = '800px';
  }
}

var map;

var citymap = {
        stadion: {
          center: {lat: 45.740428829824396, lng: 21.244258879451085},
          aria: 39190
        },
        botanic: {
          center: {lat: 45.76019136083797, lng: 21.22487902612193},
          aria: 87000
        },
        zoo: {
          center: {lat: 45.78129372200387, lng: 21.267582178552402},
          aria: 60000
        },
        copiilor: {
          center: {lat: 45.751949643280774, lng: 21.236178875078625},
          aria: 66400
        }
      };

function initMap(){
var myLatlng = new google.maps.LatLng(45.75372,21.22571);
var mapOptions = {
  zoom: 12,
  center: myLatlng
}
var map = new google.maps.Map(document.getElementById("map"), mapOptions);

 for (var place in citymap) {
          // Add the circle for this city to the map.
          var placeCircle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000',  //rosu
            fillOpacity: 0.35,
            map: map,
            center: citymap[place].center,
            radius: Math.sqrt(citymap[place].aria)
          });
        }
}



function setMarker(coordonates,aria,title,color)
{
  console.log("setMarker fcn");
  var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 16,
          center: coordonates,
          mapTypeId: 'terrain'
        });
  var marker = new google.maps.Marker({
          position: coordonates,
          map: map,
          title: title
        });
  
  var placeCircle = new google.maps.Circle({
            strokeColor: color,
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: color,
            fillOpacity: 0.35,
            map: map,
            center: coordonates,
            radius: Math.sqrt(aria)
          });


}

function setMapToAScpecificPlace()
{
   if(document.getElementById('mySelect').value!="Toata harta")
  {
  console.log(document.getElementById('mySelect').value);
  
  switch(document.getElementById('mySelect').value)
  {
  case 'Stadionul Dan Paltinisanu':

  console.log("Case stadion");
  var aria=citymap.stadion.aria;
  var coordonates=citymap.stadion.center;
  var title= 'Stadionul Dan Paltinisanu';
  break;

  case 'Gradina Zoologica':
  console.log("Case zoo");
  var coordonates=citymap.zoo.center;
  var aria = citymap.zoo.aria;
  var title="Gradina Zoologica";
  break;

  case 'Parcul Botanic':
  console.log("Case botanic");
  var coordonates=citymap.botanic.center;
  var aria = citymap.botanic.aria;
  var tilte= "Parcul Botanic";
  break;

  case 'Parcul Copiilor':
  console.log("Case copiilor");
  var aria=citymap.copiilor.aria;
  var title="Parcul Copiilor";
  var coordonates=citymap.copiilor.center;
  break;

} 
  var color= '#FF0000';
   setMarker(coordonates,aria,title,color); 
}
else
{
  initMap();
}
}



function startStopPompa()
{
  
  switch(document.getElementById('mySelect').value)
  {
  case 'Stadionul Dan Paltinisanu':

  console.log("Case stadion");
  var aria=citymap.stadion.aria;
  var coordonates=citymap.stadion.center;
  var title= 'Stadionul Dan Paltinisanu';
  break;

  case 'Gradina Zoologica':
  console.log("Case zoo");
  var coordonates=citymap.zoo.center;
  var aria = citymap.zoo.aria;
  var title="Gradina Zoologica";
  break;

  case 'Parcul Botanic':
  console.log("Case botanic");
  var coordonates=citymap.botanic.center;
  var aria = citymap.botanic.aria;
  var tilte= "Parcul Botanic";
  break;

  case 'Parcul Copiilor':
  console.log("Case copiilor");
  var aria=citymap.copiilor.aria;
  var title="Parcul Copiilor";
  var coordonates=citymap.copiilor.center;
  break;
}


if(document.getElementById('myonoffswitch').checked==false)
  { 
    var color= '#00cc00';
    setMarker(coordonates,aria,title,color); 

       window.setTimeout(function() {
          console.log("Timeout");
          var placeCircle = new google.maps.Circle({
            strokeColor: '#FF0000',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#FF0000', 
            fillOpacity: 0.45,
            map: map,
            center: coordonates,
            radius: Math.sqrt(aria)
          });
        }, 10000);
}
else if(document.getElementById('myonoffswitch').checked==true)
{
  if(document.getElementById('mySelect').value!="Toata harta")
  {
    var color= '#ff3300';
    setMarker(coordonates,aria,title,color); 
   }
   else
   {
    for (var place in citymap) {
          // Add the circle for this city to the map.
          var placeCircle = new google.maps.Circle({
            strokeColor: '#00cc00',
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#00cc00',  
            fillOpacity: 0.35,
            map: map,
            center: citymap[place].center,
            radius: Math.sqrt(citymap[place].aria)
          });
        }
   }     
}
}





































function displayValues()
{   console.log("functie tabel");
    document.getElementById("tableOfValues").style.display ="inline";
}



</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDMwQDCgE-rLGZb11J_Kp2fij0VoVGtIpM&callback=initMap"
    async defer></script>
</body>
</html>
