<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AI.PerfCounterCollector</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseServiceClient">
            <summary>
            Service client for QPS service.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CategorySample">
            <summary>
            Represents performance data for a performance object (category).
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CategorySample.#ctor(System.Byte[],System.Int32,System.Int32,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib)">
            <summary>Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CategorySample"/> class. Instantiates a <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CategorySample"/> class.</summary>
            <param name="data">Performance data.</param>
            <param name="categoryNameIndex">Category name index.</param>
            <param name="counterNameIndex">Counter name index.</param>
            <param name="library">Performance library.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CounterDefinitionSample">
            <summary>
            Represents performance data for an individual counter.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CounterDefinitionSample.#ctor(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.NativeMethods.PERF_COUNTER_DEFINITION,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CounterDefinitionSample"/> class. 
            </summary>
            <param name="perfCounter">Performance counter data.</param>
            <param name="instanceNumber">Instance name.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CounterDefinitionSample.SetInstanceValue(System.Int32,System.IntPtr)">
            <summary>
            Sets the value for an instance.
            </summary>
            <param name="index">Index value.</param>
            <param name="dataRef">Data reference.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.CounterDefinitionSample.GetInstanceValue(System.Int32)">
            <summary>
            Gets the value for an instance.
            </summary>
            <param name="instanceIndex">The index of the instance.</param>
            <returns>The instance value.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib">
            <summary>
            Represents a library that works with performance data through a low-level pseudo-registry interface.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib.GetPerfLib">
            <summary>
            Gets the performance library instance.
            </summary>
            <returns>The performance library instance.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib.GetCategorySample(System.Int32,System.Int32)">
            <summary>
            Gets the category sample.
            </summary>
            <param name="categoryIndex">Index of the category.</param>
            <param name="counterIndex">Index of the counter.</param>
            <returns>The category sample.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib.Initialize">
            <summary>
            Initializes the library.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib.Close">
            <summary>
            Closes the library.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.PerfLib.PerfLib.GetPerformanceData(System.String)">
            <summary>
            Gets performance data for the given category index.
            </summary>
            <param name="categoryIndex">Index of the category.</param>
            <returns>Performance data.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector">
            <summary>
            Top CPU collector.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.#ctor(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.Clock,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseProcessProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector"/> class. 
            </summary>
            <param name="timeProvider">Time provider.</param>
            <param name="processProvider">Process provider.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.InitializationFailed">
            <summary>
            Gets a value indicating whether the initialization has failed.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.AccessDenied">
            <summary>
            Gets a value indicating whether the Access Denied error has taken place.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.GetTopProcessesByCpu(System.Int32)">
            <summary>
            Gets top N processes by CPU consumption.
            </summary>
            <param name="topN">Top N processes.</param>
            <returns>List of top processes by CPU consumption.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.Initialize">
            <summary>
            Initializes the top CPU collector.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseTopCpuCollector.Close">
            <summary>
            Closes the top CPU collector.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseCounter">
            <summary>
            Enum for all the performance counters collected for quick pulse.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseCounter.Bytes">
            <summary>
            Committed bytes counter.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseCounter.ProcessorTime">
            <summary>
            Processor time counter.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseDefaults.DefaultPerformanceCountersToCollect">
            <summary>
            Dictionary of performance counters to collect for standard framework.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseDefaults.WebAppDefaultPerformanceCountersToCollect">
            <summary>
            Dictionary of performance counters to collect for WEB APP framework.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseDefaults.WebAppToStandardCounterMapping">
            <summary>
            Mapping between the counters collected in WEB APP to the counters collected in Standard Framework.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseQuotaTracker">
            <summary>
            Quota tracker to support throttling telemetry item collection.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseQuotaTracker.ApplyQuota">
            <summary>
            Checks if there's quota left.
            </summary>
            <returns><b>true</b> if there's still quota left, <b>false</b> otherwise.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseThreadState">
            <summary>
            Represents the state of a thread.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseThreadState.IsStopRequested">
            <summary>
            Indicates if thread has been requested to abort.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseDataAccumulatorManager.CurrentDataAccumulator">
            <summary>
            Gets a reference to the accumulator that is currently under construction.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseDataAccumulatorManager.CompleteCurrentDataAccumulator(Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration)">
            <summary>
            Locks in the current data accumulator and moves it into the Complete slot.
            Resets the Current slot to a new zeroed-out accumulator.
            </summary>
            <param name="collectionConfiguration">The collection configuration to be used for the next accumulator.</param>
            <returns>The newly completed accumulator.</returns>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseServiceClient.ServiceUri">
            <summary>
            Gets the QPS URI.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseServiceClient.Ping(System.String,System.DateTimeOffset,System.String,System.String,Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationInfo@)">
            <summary>
            Pings QPS to check if it expects data right now.
            </summary>
            <param name="instrumentationKey">InstrumentationKey for which to submit data samples.</param>
            <param name="timestamp">Timestamp to pass to the server.</param>
            <param name="configurationETag">Current configuration ETag that the client has.</param>
            <param name="authApiKey">Authentication API key.</param>
            <param name="configurationInfo">When available, the deserialized response data received from the server.</param>
            <returns><b>true</b> if data is expected, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseServiceClient.SubmitSamples(System.Collections.Generic.IEnumerable{Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataSample},System.String,System.String,System.String,Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationInfo@,Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationError[])">
            <summary>
            Submits a data samples to QPS.
            </summary>
            <param name="samples">Data samples.</param>
            <param name="instrumentationKey">InstrumentationKey for which to submit data samples.</param>
            <param name="configurationETag">Current configuration ETag that the client has.</param>
            <param name="authApiKey">Authentication API key.</param>
            <param name="configurationInfo">When available, the deserialized response data received from the server.</param>
            <param name="collectionConfigurationErrors">Errors to be reported back to the server.</param>
            <returns><b>true</b> if the client is expected to keep sending data samples, <b>false</b> otherwise.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulsePerfLib">
            <summary>
            Interface for the Performance library.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulsePerfLib.GetCategorySample(System.Int32,System.Int32)">
            <summary>
            Gets the category sample.
            </summary>
            <param name="categoryIndex">Category index.</param>
            <param name="counterIndex">Counter index.</param>
            <returns>The category sample.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulsePerfLib.Initialize">
            <summary>
            Initializes the performance library.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulsePerfLib.Close">
            <summary>
            Closes the performance library.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseProcessProvider">
            <summary>
            Provider interface for Windows processes.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseProcessProvider.Initialize">
            <summary>
            Initializes the process provider.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseProcessProvider.Close">
            <summary>
            Closes the process provider.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseProcessProvider.GetProcesses(System.Nullable{System.TimeSpan}@)">
            <summary>
            Gets a collection of <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess"/> objects - each corresponding to a system process and containing
            information about the amount of time the process has occupied CPU cores.
            </summary>
            <param name="totalTime">If available, contains the value of the _Total instance of the counter, which indicates the overall
            amount of time spent by CPU cores executing system processes.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector">
            <summary>
            Interface for top CPU collector.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector.InitializationFailed">
            <summary>
            Gets a value indicating whether the initialization has failed.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector.AccessDenied">
            <summary>
            Gets a value indicating whether the Access Denied error has taken place.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector.GetTopProcessesByCpu(System.Int32)">
            <summary>
            Gets top N processes by CPU consumption.
            </summary>
            <param name="topN">Top N processes.</param>
            <returns>List of top processes by CPU consumption.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector.Initialize">
            <summary>
            Initializes the top CPU collector.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector.Close">
            <summary>
            Closes the top CPU collector.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess">
            <summary>
            Top CPU collector.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess"/> class. 
            </summary>
            <param name="processName">Process name.</param>
            <param name="totalProcessorTime">Total processor time.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess.ProcessName">
            <summary>
            Gets the process name.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess.TotalProcessorTime">
            <summary>
            Gets the total processor time.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider">
            <summary>
            Top CPU process provider.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider.#ctor(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulsePerfLib)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider"/> class. 
            </summary>
            <param name="perfLib">Performance library.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider.Initialize">
            <summary>
            Initializes the process provider.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider.Close">
            <summary>
            Closes the process provider.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcessProvider.GetProcesses(System.Nullable{System.TimeSpan}@)">
            <summary>
            Gets a collection of <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseProcess"/> objects - each corresponding to a system process and containing
            information about the amount of time the process has occupied CPU cores.
            </summary>
            <param name="totalTime">If available, contains the value of the _Total instance of the counter, which indicates the overall
            amount of time spent by CPU cores executing system processes.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants">
            <summary>
            Constants related to quick pulse service.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsSubscribedHeaderName">
            <summary>
            Subscribed header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsTransmissionTimeHeaderName">
            <summary>
            Transmission time header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsConfigurationETagHeaderName">
            <summary>
            Configuration ETag header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsInstanceNameHeaderName">
            <summary>
            Instance name header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsStreamIdHeaderName">
            <summary>
            Stream id header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsMachineNameHeaderName">
            <summary>
            Machine name header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsInvariantVersionHeaderName">
            <summary>
            Invariant version header.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsAuthApiKeyHeaderName">
            <summary>
            Authentication API key.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseConstants.XMsQpsAuthOpaqueHeaderNames">
            <summary>
            The following authentication headers must be received and submitted back to the service with no modification.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataAccumulator">
            <summary>
            DTO containing data we collect from AI. Modified in real time.
            </summary>
            <remarks>This is performance-critical DTO that needs to be quickly accessed in a thread-safe manner.</remarks>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataAccumulator.MaxCount">
            <summary>
            2^19 - 1
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataAccumulator.MaxDuration">
            <summary>
            2^44 - 1
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataAccumulatorManager">
            <summary>
            Accumulator manager for QuickPulse data.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataSample">
            <summary>
            DTO containing data that we send to QPS.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.StandardPerformanceCollector.StandardPerformanceCollector.PerformanceCounters">
            <summary>
            Gets a collection of registered performance counters.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.StandardPerformanceCollector.StandardPerformanceCollector.Collect(System.Action{System.String,System.Exception})">
            <summary>
            Performs collection for all registered counters.
            </summary>
            <param name="onReadingFailure">Invoked when an individual counter fails to be read.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.StandardPerformanceCollector.StandardPerformanceCollector.RefreshCounters">
            <summary>
            Refreshes counters.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.StandardPerformanceCollector.StandardPerformanceCollector.RegisterCounter(System.String,System.String,System.Boolean,System.String@,System.Boolean)">
            <summary>
            Registers a counter using the counter name and reportAs value to the total list of counters.
            </summary>
            <param name="perfCounterName">Name of the performance counter.</param>
            <param name="reportAs">Report as name for the performance counter.</param>
            <param name="isCustomCounter">Boolean to check if the performance counter is custom defined.</param>
            <param name="error">Captures the error logged.</param>
            <param name="blockCounterWithInstancePlaceHolder">Boolean that controls the registry of the counter based on the availability of instance place holder.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.StandardPerformanceCollector.StandardPerformanceCollector.RemoveCounter(System.String,System.String)">
            <summary>
            Removes a counter.
            </summary>
            <param name="perfCounter">Name of the performance counter to remove.</param>
            <param name="reportAs">ReportAs value of the performance counter to remove.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.PerformanceCounters">
            <summary>
            Gets a collection of registered performance counters.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.Collect(System.Action{System.String,System.Exception})">
            <summary>
            Performs collection for all registered counters.
            </summary>
            <param name="onReadingFailure">Invoked when an individual counter fails to be read.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.RefreshCounters">
            <summary>
            Refreshes counters.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.RegisterCounter(System.String,System.String,System.Boolean,System.String@,System.Boolean)">
            <summary>
            Registers a counter using the counter name and reportAs value to the total list of counters.
            </summary>
            <param name="perfCounter">Name of the performance counter.</param>
            <param name="reportAs">Report as name for the performance counter.</param>
            <param name="isCustomCounter">Boolean to check if the performance counter is custom defined.</param>
            <param name="error">Captures the error logged.</param>
            <param name="blockCounterWithInstancePlaceHolder">Boolean that controls the registry of the counter based on the availability of instance place holder.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.RemoveCounter(System.String,System.String)">
            <summary>
            Removes a counter.
            </summary>
            <param name="perfCounter">Name of the performance counter to remove.</param>
            <param name="reportAs">ReportAs value of the performance counter to remove.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.WebAppPerformanceCollector.WebAppPerformanceCollector.RefreshPerformanceCounter(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterData)">
            <summary>
            Rebinds performance counters to Windows resources.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector.PerformanceCounters">
            <summary>
            Gets a collection of counters that are currently registered with the collector.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector.Collect(System.Action{System.String,System.Exception})">
            <summary>
            Performs collection for all registered counters.
            </summary>
            <param name="onReadingFailure">Invoked when an individual counter fails to be read.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector.RefreshCounters">
            <summary>
            Refreshes and rebinds all the set of counters that are intended to be collected.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector.RegisterCounter(System.String,System.String,System.Boolean,System.String@,System.Boolean)">
            <summary>
            Registers a counter using the counter name and reportAs value to the total list of counters.
            </summary>
            <param name="perfCounter">Name of the performance counter.</param>
            <param name="reportAs">Report as name for the performance counter.</param>
            <param name="isCustomCounter">Boolean to check if the performance counter is custom defined.</param>
            <param name="error">Captures the error logged.</param>
            <param name="blockCounterWithInstancePlaceHolder">Boolean that controls the registry of the counter based on the availability of instance place holder.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector.RemoveCounter(System.String,System.String)">
            <summary>
            Removes a counter.
            </summary>
            <param name="perfCounter">Name of the performance counter to remove.</param>
            <param name="reportAs">ReportAs value of the counter to remove.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure">
            <summary>Represents basic performance counter structure.</summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure.#ctor">
            <summary>
            Initializes a new instance of the PerformanceCounterStructure class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PerformanceCounterStructure class.
            </summary>
            <param name="categoryName">The counter category name.</param>
            <param name="counterName">The counter name.</param>
            <param name="instanceName">The counter instance name.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure.CategoryName">
            <summary>Gets or sets the counter category name.</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure.CounterName">
            <summary>Gets or sets the counter name.</summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure.InstanceName">
            <summary>Gets or sets the counter instance.</summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility">
            <summary>
            Utility functionality for performance counter collection.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.FormatPerformanceCounter(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterStructure)">
            <summary>
            Formats a counter into a readable string.
            </summary>
            <param name="pc">Performance counter structure.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.IsWebAppRunningInAzure">
            <summary>
            Searches for the environment variable specific to Azure web applications and confirms if the current application is a web application or not.
            </summary>
            <returns>Boolean, which is true if the current application is an Azure web application.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.GetProcessorCount(System.Boolean)">
            <summary>
            Gets the processor count from the appropriate environment variable depending on whether the app is a WebApp or not.
            </summary>
            <param name="isWebApp">Indicates whether the application is a WebApp or not.</param>
            <returns>The number of processors in the system or null if failed to determine.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.SDKVersionPrefix">
            <summary>
            Differentiates the SDK version prefix for azure web applications with standard applications.
            </summary>
            <returns>Returns the SDK version prefix based on the platform.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.FormatPerformanceCounter(System.String,System.String,System.String)">
            <summary>
            Formats a counter into a readable string.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.CreateAndValidateCounter(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean@,System.String@)">
            <summary>
            Validates the counter by parsing.
            </summary>
            <param name="perfCounterName">Performance counter name to validate.</param>
            <param name="win32Instances">Windows 32 instances.</param>
            <param name="clrInstances">CLR instances.</param>
            <param name="usesInstanceNamePlaceholder">Boolean to check if it is using an instance name place holder.</param>
            <param name="error">Error message.</param>
            <returns>Performance counter.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.ParsePerformanceCounter(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Boolean@)">
            <summary>
            Parses a performance counter canonical string into a PerformanceCounter object.
            </summary>
            <remarks>This method also performs placeholder expansion.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.InvalidatePlaceholderCache">
            <summary>
            Invalidates placeholder cache.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.PerformanceCounterUtility.MatchInstancePlaceholder(System.String)">
            <summary>
            Matches an instance name against the placeholder regex.
            </summary>
            <param name="instanceName">Instance name to match.</param>
            <returns>Regex match.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule">
            <summary>
            Telemetry module for collecting QuickPulse data.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.#ctor(Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseCollectionTimeSlotManager,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.QuickPulseDataAccumulatorManager,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseServiceClient,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.IPerformanceCollector,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.IQuickPulseTopCpuCollector,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.QuickPulseTimings)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule"/> class. Internal constructor for unit tests only.
            </summary>
            <param name="collectionTimeSlotManager">Collection time slot manager.</param>
            <param name="dataAccumulatorManager">Data hub to sink QuickPulse data to.</param>
            <param name="serviceClient">QPS service client.</param>
            <param name="performanceCollector">Performance counter collector.</param>
            <param name="topCpuCollector">Top N CPU collector.</param>
            <param name="timings">Timings for the module.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.QuickPulseServiceEndpoint">
            <summary>
            Gets the QuickPulse service endpoint to send to.
            </summary>
            <remarks>Loaded from configuration.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.DisableFullTelemetryItems">
            <summary>
            Gets the flag indicating whether full telemetry items collection is disabled.
            </summary>
            <remarks>Loaded from configuration.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.DisableTopCpuProcesses">
            <summary>
            Gets the flag indicating whether top CPU processes collection is disabled.
            </summary>
            <remarks>Loaded from configuration.</remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.AuthenticationApiKey">
            <summary>
            Gets the authentication API key.
            Authentication API key is created in the Azure Portal for an application and ensures secure distribution of
            the collection configuration when using QuickPulse.
            </summary>
            <remarks>Loaded from configuration.</remarks>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.Dispose">
            <summary>
            Disposes resources allocated by this type.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initialize method is called after all configuration properties have been loaded from the configuration.
            </summary>
            <param name="configuration">TelemetryConfiguration passed to the module.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.RegisterTelemetryProcessor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)">
            <summary>
            Registers an instance of type <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor"/> with this module.
            </summary>
            <remarks>This call is only necessary when the module is created in code and not in configuration.</remarks>
            <param name="telemetryProcessor">QuickPulseTelemetryProcessor instance to be registered with the module.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryModule.Dispose(System.Boolean)">
            <summary>
            Dispose implementation.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor">
            <summary>
            Extracts QuickPulse data from the telemetry stream.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.TelemetryDocumentContractVersion">
            <summary>
            1.0 - initial release
            1.1 - added DocumentStreamId, EventTelemetryDocument, TraceTelemetryDocument
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.globalQuotaTracker">
            <summary>
            An overall, cross-stream quota tracker
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.#ctor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor"/> class.
            </summary>
            <param name="next">The next TelemetryProcessor in the chain.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if next is null.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.#ctor(Microsoft.ApplicationInsights.Extensibility.ITelemetryProcessor,Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.Implementation.QuickPulse.Helpers.Clock,System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor"/> class. Internal constructor for unit tests only.
            </summary>
            <param name="next">The next TelemetryProcessor in the chain.</param>
            <param name="timeProvider">Time provider.</param>
            <param name="maxGlobalTelemetryQuota">Max overall telemetry quota.</param>
            <param name="initialGlobalTelemetryQuota">Initial overall telemetry quota.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if next is null.</exception>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initialize method is called after all configuration properties have been loaded from the configuration.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.PerfCounterCollector.QuickPulse.QuickPulseTelemetryProcessor.Process(Microsoft.ApplicationInsights.Channel.ITelemetry)">
            <summary>
            Intercepts telemetry items and updates QuickPulse data when needed.
            </summary>
            <param name="telemetry">Telemetry item being tracked by AI.</param>
            <remarks>This method is performance critical since every AI telemetry item goes through it.</remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.AccumulatedValues">
            <summary>
            Accumulator for calculated metrics.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CalculatedMetric`1">
            <summary>
            Represents a single configured metric that needs to be calculated and reported on top of the telemetry items 
            that pass through the pipeline. Includes a set of filters that define which telemetry items to consider, a projection 
            which defines which field to use as a value, and an aggregation which dictates the algorithm of arriving at 
            a single reportable value within a second.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Filtering.CalculatedMetric`1.filterGroups">
            <summary>
            OR-connected collection of AND-connected filter groups.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration">
            <summary>
            Represents the collection configuration - a set of calculated metrics, performance counters, and full telemetry documents to be collected by the SDK.
            </summary>
            <remarks>
            This class is a hub for all pieces of configurable collection configuration.
            Upon initialization
              - it creates collection-time instances of <see cref="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CalculatedMetric`1"/> and maintains them in separate collections by telemetry type.
                These are used to filter and calculated calculated metrics configured by the service.
              - it creates collection-time instances of <see cref="T:Microsoft.ApplicationInsights.Extensibility.Filtering.DocumentStream"/> which are used to filter and send out full telemetry documents.
              - it creates certain metadata collections which are used by other collection-time components to learn more about what is being collected at any given time.
            </remarks>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration.TelemetryMetadata">
            <summary>
            Telemetry types only. Used by QuickPulseTelemetryProcessor.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration.DocumentStreams">
            <summary>
            Document streams. Telemetry items are provided by QuickPulseTelemetryProcessor.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration.PerformanceCounters">
            <summary>
            Gets a list of performance counters.
            </summary>
            <remarks>
            Performance counter name is stored in CalculatedMetricInfo.Projection.
            </remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationAccumulator">
            <summary>
            Represents the part of the QuickPulse accumulator which holds calculated metric data.
            As telemetry item pass through the pipeline, they are being filtered, projected, and the resulting
            values are stored here - both for calculated metrics and full telemetry document streams.
            Unlike the main accumulator, this one might not have finished being processed at swap time,
            so the consumer should keep the reference to it post-swap and make the best effort not to send
            prematurely. <see cref="F:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationAccumulator.referenceCount"/> indicates that the accumulator is still being processed
            when non-zero.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationAccumulator.referenceCount">
            <summary>
            Used by writers to indicate that a processing operation is still in progress.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationAccumulator.MetricAccumulators">
            <summary>
            Gets a dictionary of metricId => AccumulatedValues.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.DocumentStream">
            <summary>
            Represents a concept of a uniquely identifiable set of full telemetry documents that are being reported by the SDK. 
            The notion of a stream is needed since multiple UX sessions might be querying for full telemetry documents with 
            different filtering criteria simultaneously.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.Filter`1">
            <summary>
            Filter determines whether a telemetry document matches the criterion.
            The filter's configuration (condition) is specified in a <see cref="T:Microsoft.ApplicationInsights.Extensibility.Filtering.FilterInfo"/> DTO.
            </summary>
            <typeparam name="TTelemetry">Type of telemetry documents.</typeparam>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.FilterConjunctionGroup`1">
            <summary>
            Defines an AND group of filters.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.CalculatedMetricInfo.FilterGroups">
            <summary>
            Gets or sets an OR-connected collection of FilterConjunctionGroupInfo objects.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationInfo">
            <summary>
            DTO that represents the collection configuration - a customizable description of performance counters, metrics, and full telemetry documents
            to be collected by the SDK. Processed and encapsulated by <see cref="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfiguration"/> at the time of actual collection.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.DocumentFilterConjunctionGroupInfo.Filters">
            <summary>
            Gets or sets an AND-connected group of filters.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.Filtering.DocumentStreamInfo.DocumentFilterGroups">
            <summary>
            Gets or sets an OR-connected collection of filter groups.
            </summary>
            <remarks>
            Each DocumentFilterConjunctionGroupInfo has a TelemetryType.
            Telemetry types that are not mentioned in this array will NOT be included in the stream.
            Telemetry types that are mentioned in this array once or more will be included if any of the mentioning DocumentFilterConjunctionGroupInfo's pass.
            </remarks>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationError">
            <summary>
            Represents an error while parsing and applying an instance of <see cref="T:Microsoft.ApplicationInsights.Extensibility.Filtering.CollectionConfigurationInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.Filtering.FilterConjunctionGroupInfo">
            <summary>
            An AND-connected group of FilterInfo objects.
            </summary>
        </member>
    </members>
</doc>
